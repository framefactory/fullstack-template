version: '3'

services:
  server:
    image: framefactory/node
    container_name: template-server
    restart: always

    command: [ "npm", "run", "$NPM_SCRIPT" ]

    environment:
      - WATCH_COMPONENT
    env_file:
      - .env
    ports:
      - $DOCKER_SERVER_PORT:$DOCKER_SERVER_PORT
    volumes:
      - .:/app
    links:
      - db
    depends_on:
      - db

  db:
    image: mongo:latest
    container_name: template-mongo
    restart: always

    env_file:
      - .env
    volumes:
      - ./services/db/data:/data/db
#      - mongo_data:/data/db
#      - ./services/db/setup:/docker-entrypoint-initdb.d

  db_gui:
    image: mongo-express:latest
    container_name: template-mongo-express
    restart: always

    environment:
      - ME_CONFIG_MONGODB_SERVER=db
    env_file:
      - .env
    ports: #host:container
      - $DOCKER_DB_PORT:8081
    links:
      - db
    depends_on:
      - db
#    command: [ "sh", "-c", "sleep 5 && tini -s -- node app" ]

#  db:
#    image: arangodb:latest
#    container_name: template-db
#    restart: always
#
#    env_file:
#      - .env
#    ports:
#      - $DOCKER_DB_PORT:8529
#    volumes:
#      - ./services/db/data:/var/lib/arangodb3

#  db:
#    image: postgres:latest
#    container_name: template-postgres
#    env_file:
#      - services/config.env
#      - services/secrets.env
#    ports:
#      - 5432:5432
#    volumes:
#      - postgres_data:/var/lib/postgresql/data

#  dbgui:
#    image: sosedoff/pgweb
#    container_name: template-pgweb
#    env_file:
#      - services/secrets.env
#    ports: # host:guest
#      - $DOCKER_DB_PORT:8081
#    links:
#      - postgres
#    depends_on:
#      - postgres

#volumes:
#  mongo_data: {}
#  postgres_data: {}
